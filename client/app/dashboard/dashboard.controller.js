'use strict';

/* The user dashboard should provide the following functionality:
    - display the user's plan
    - allow the user to update their plan
    - display the 'goals' for a user (what they need to do to meet their retirement goals, and any others they add)
    - display links to any tutorials that are in progress
    - display links to favorited/bookmarked tutorials
    - provide easy access to relevant calculators (if they have student loans, link to student loan repayment calc. Mortgage, etc.)
    - allow the user to share the plan with a registered (and verified) advisor or attorney (future)
*/
angular.module('rockridge')
.controller('DashboardCtrl', function($scope, $state) {
  // Set $state on the scope to access it in the views.
  $scope.$state = $state;

  // ************************************************************************************
  // TODO: Remove this test plan once we can actually fetch plans from the database.
  // ************************************************************************************
  $scope.plan = $scope.plan || {
    assets: {
      fixed: [
        { asset: 'Checking Account', value: 5000 },
        { asset: 'Savings Account', value: 10000 }
      ],
      personal: [
        { asset: 'Home', value: 500000 },
        { asset: 'Auto', value: 40000 },
        { asset: 'Other Stuff', value: 10000 }
      ],
      variable: [
        { asset: 'Brokerage Account', value: 25000 },
        { asset: 'User 401k', value: 137000 },
        { asset: 'Spouse 401k', value: 10000 }
      ],
    },
    birthdate: new Date(1969, 5, 9),
    charitableContributions: 10000,
    children: [
      { name: 'Child 1 Name', birthdate: new Date(2015, 2, 14) }
    ],
    cityResident: 'San Francisco',
    streetResident: '1234 W. 5th St.',
    zipResident: '12345',
    debts: {
      creditCards: [
        { asset: 'VISA', rate: 10.99, balance: 5000 },
        { asset: 'Chase Credit Card', rate: 15.99, balance: 4000 },
      ],
      other: [
        { asset: 'Auto Loan', rate: 0.9, balance: 35000 },
        { asset: 'Disney Wedding Loan', rate: 9.5, balance: 41000 }
      ],
      studentLoans: [
        { asset: 'Federal Stafford', rate: 6.8, balance: 150000 },
        { asset: 'Federal Perkins', rate: 5.0, balance: 50000 }
      ],
    },
    dependents: 2,
    firstname: 'Test',
    filingStatus: 'married',
    fixedExpenses: [
      { asset: 'Mortgage', value: 1960 },
      { asset: 'Utilities', value: 450 },
      { asset: 'Auto Loan', value: 500 },
      { asset: 'Student Loans', value: 1200 },
      { asset: 'Insurances', value: 700 },
      { asset: 'Groceries', value: 1000 },
      { asset: 'Childcare', value: 800 }
    ],
    flexibleExpenses: [
      { asset: 'Entertainment', value: 800 },
      { asset: 'Travel / Vacations', value: 1000 },
      { asset: 'Miscellaneous', value: 500 }
    ],
    goals: {
      plan: [ // goals generated by the plan
        { text: 'Increase monthly savings contribution by $500', created: new Date(), due: new Date(2015, 12, 1), complete: false },
        { text: 'Reduce flexible expenses by $100 per month', created: new Date(), due: new Date(2015, 8, 1), complete: false }
      ],
      user: [ // goals made by the user
        { text: 'Spend less money on clothes', created: new Date(), due: undefined, complete: false },
        { text: 'Get one less Starbucks drink each day', created: new Date(), due: undefined, complete: false }
      ]
    },
    grossAnnualIncome: 250000,
    hasChildren: 'true',
    hasMortgage: 'true',
    hasPrimaryResidence: 'true',
    lastname: 'User',
    maritalStatus: 'true',
    mortgage: {
      homeValue: 500000,
      currentBalance: 300000,
      currentRate: 3.9,
      currentTerm: 30,
      initialBalance: 400000,
      startDate: new Date(2006, 5, 1),
    },
    netWorth: 57000,
    otherDeductions: 5000,
    pensionIncome: 0,
    sameWorkResidence: 'true',
    spouse401kContribution: 11000,
    spouseBirthdate: new Date(1996, 8, 6),
    spouseCityResident: 'San Francisco',
    spouseEmployerDisabilityInsurance: undefined,
    spouseEmployerLifeInsurance: 50000,
    spouseFirstName: 'Spouse',
    spouseGrossAnnualIncome: 100000,
    spouseHealthInsurance: 'true',
    spouseIndividualDisabilityInsurance: 0,
    spouseIndividualLifeInsurance: 10000,
    spouseLastName: 'User',
    spousePayrollDeductions: 400,
    spouseRothContribution: 5500,
    spouseStateResident: 'CA',
    stateResident: 'CA',
    targetRetirementAge: 55,
    targetRetirementIncome: 8000,
    user401kContribution: 15000,
    userAutoInsurance: 'true',
    userEmployerDisabilityInsurance: undefined,
    userEmployerLifeInsurance: 15000,
    userHealthInsurance: 'true',
    userHomeInsurance: 'true',
    userIndividualDisabilityInsurance: 0,
    userIndividualLifeInsurance: 0,
    userPayrollDeductions: 2000,
    userRothContribution: 5500,
    taxProjection: {
      householdGross: 350000,
      pretaxContributions: 34000,
      agi: 316000,
      deductions: {
        standard: 12600,
        itemized: {
          localTaxes: 38930,
          propertyTaxes: 3050,
          mortgageInterest: 10280,
          miscDeduction: 5000
        },
        maxApplicable: 52061
      },
      exemptions: {
        claimed: 8000,
        reductions: 720,
        maxApplicable: 7280
      },
      taxableIncome: 256659,
      projected: {
        federal: 60391,
        amt: 13339,
        local: 38930,
        fica: {
          ss: 13547,
          medicare: 5075,
          addlMedicare: 900
        }
      },
      netIncome: 143999
    }
  };
  // End temporary user test code.

  // Transition to dashboard.views state to load page views.
  $state.transitionTo('dashboard.views');
});
